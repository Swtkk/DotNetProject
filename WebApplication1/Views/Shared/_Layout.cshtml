@using System.Net
@using Microsoft.AspNetCore.Http;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - WebApplication1</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/WebApplication1.styles.css" asp-append-version="true"/>
    

</head>
<body>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">WebApplication1</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="container navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item px-3">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    </li>
                    <li class="nav-item px-3">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                    </li>
                    <li class="nav-item px-3">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Category" asp-action="Index">Kategorie</a>
                    </li>
                    <li class="nav-item px-3">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Category" asp-action="Create">Dodaj kategorie</a>
                    </li>
                    @if (User.IsInRole(SD.Role_Admin))
                    {
                        <li class="nav-item px-3">
                            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Index">Użytkownicy</a>
                        </li>
                    }
                    @if ((User.IsInRole(SD.Role_Admin) || User.IsInRole(SD.Role_Moderator) ))
                    {
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Message" asp-action="ReportedMessages">Zgłoszone wiadomości</a>
                    </li>
                    }
                </ul>
                <partial name="_LoginPartial"/>
            </div>
        </div>
    </nav>
</header>
<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        &copy; 2024 - WebApplication1 - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
</footer>
<script type="module">
    import 'https://cdn.jsdelivr.net/npm/emoji-picker-element@1.6.0/index.js';

    document.addEventListener('DOMContentLoaded', () => {
        const emojiButton = document.querySelector('#emojiButton');
        const messageContent = document.querySelector('#messageContent');

        const picker = document.createElement('emoji-picker');
        picker.style.position = 'absolute';
        picker.style.display = 'none';
        picker.style.zIndex = 1000;
        document.body.appendChild(picker);

        emojiButton.addEventListener('click', (e) => {
            e.preventDefault();
            const rect = emojiButton.getBoundingClientRect();
            picker.style.top = `${rect.bottom + window.scrollY}px`;
            picker.style.left = `${rect.left + window.scrollX}px`;
            picker.style.display = picker.style.display === 'none' ? 'block' : 'none';
        });

        picker.addEventListener('emoji-click', (event) => {
            const emoji = event.detail.unicode;
            messageContent.value += emoji;
            picker.style.display = 'none';
        });

        document.addEventListener('click', (e) => {
            if (!picker.contains(e.target) && e.target !== emojiButton) {
                picker.style.display = 'none';
            }
        });
    });
</script>

@if (Context.User.Identity.IsAuthenticated)
{
    <script>
        const sessionTimeout = 900; 

        function redirectToLogin() {
            window.location.href = '/Identity/Account/Login'; 
        }
        
        let timeout = setTimeout(redirectToLogin, sessionTimeout * 1000);

 
        function resetTimer() {
            clearTimeout(timeout);
            timeout = setTimeout(redirectToLogin, sessionTimeout * 1000);
        }

       
        window.onload = resetTimer;
        document.onmousemove = resetTimer;
        document.onkeypress = resetTimer;
        document.ontouchstart = resetTimer; 
    </script>
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>